// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`fail 1`] = `
Object {
  "errorCount": 10,
  "fatalErrorCount": 0,
  "filePath": StringContaining "tests/fixtures/fail.jsx",
  "fixableErrorCount": 4,
  "fixableWarningCount": 0,
  "messages": Array [
    Object {
      "column": 8,
      "endColumn": 13,
      "endLine": 1,
      "line": 1,
      "message": "'react' is defined but never used.",
      "messageId": "unusedVar",
      "nodeType": "Identifier",
      "ruleId": "no-unused-vars",
      "severity": 2,
    },
    Object {
      "column": 19,
      "endColumn": 26,
      "endLine": 1,
      "fix": Object {
        "range": Array [
          18,
          25,
        ],
        "text": "'React'",
      },
      "line": 1,
      "message": "Strings must use singlequote.",
      "messageId": "wrongQuotes",
      "nodeType": "Literal",
      "ruleId": "quotes",
      "severity": 2,
    },
    Object {
      "column": 1,
      "endColumn": 7,
      "endLine": 3,
      "line": 3,
      "message": "'render' is not defined.",
      "messageId": "undef",
      "nodeType": "Identifier",
      "ruleId": "no-undef",
      "severity": 2,
    },
    Object {
      "column": 3,
      "endColumn": 18,
      "endLine": 5,
      "line": 5,
      "message": "'React' must be in scope when using JSX",
      "messageId": "notInScope",
      "nodeType": "JSXOpeningElement",
      "ruleId": "react/react-in-jsx-scope",
      "severity": 2,
    },
    Object {
      "column": 7,
      "endColumn": 30,
      "endLine": 6,
      "line": 6,
      "message": "'React' must be in scope when using JSX",
      "messageId": "notInScope",
      "nodeType": "JSXOpeningElement",
      "ruleId": "react/react-in-jsx-scope",
      "severity": 2,
    },
    Object {
      "column": 13,
      "endColumn": 29,
      "endLine": 6,
      "fix": Object {
        "range": Array [
          69,
          74,
        ],
        "text": "className",
      },
      "line": 6,
      "message": "Unknown property 'class' found, use 'className' instead",
      "messageId": "unknownProp",
      "nodeType": "JSXAttribute",
      "ruleId": "react/no-unknown-property",
      "severity": 2,
    },
    Object {
      "column": 7,
      "endColumn": 10,
      "endLine": 10,
      "line": 7,
      "message": "'React' must be in scope when using JSX",
      "messageId": "notInScope",
      "nodeType": "JSXOpeningElement",
      "ruleId": "react/react-in-jsx-scope",
      "severity": 2,
    },
    Object {
      "column": 28,
      "endColumn": 30,
      "endLine": 7,
      "fix": Object {
        "range": Array [
          134,
          136,
        ],
        "text": " ",
      },
      "line": 7,
      "message": "Multiple spaces found before '{'.",
      "messageId": "multipleSpaces",
      "nodeType": "Punctuator",
      "ruleId": "no-multi-spaces",
      "severity": 2,
    },
    Object {
      "column": 15,
      "endColumn": 21,
      "endLine": 8,
      "line": 8,
      "message": "'target' is assigned a value but never used.",
      "messageId": "unusedVar",
      "nodeType": "Identifier",
      "ruleId": "no-unused-vars",
      "severity": 2,
    },
    Object {
      "column": 21,
      "endColumn": 22,
      "endLine": 9,
      "fix": Object {
        "range": Array [
          189,
          199,
        ],
        "text": ")
      }",
      },
      "line": 9,
      "message": "Extra semicolon.",
      "messageId": "extraSemi",
      "nodeType": "ExpressionStatement",
      "ruleId": "semi",
      "severity": 2,
    },
  ],
  "source": "import react from \\"React\\"

render(
  (
  <div id=\\"foo\\" >
      <span class=\\"greeting\\">Hello, world!</span>
      <button onClick={e =>  {
        const target = e.target
        alert('hi!');
      }}>Click Me</button>
    </div>
  ),
  document.getElementById('app')
)
",
  "usedDeprecatedRules": Array [],
  "warningCount": 0,
}
`;

exports[`pass 1`] = `
Object {
  "errorCount": 0,
  "fatalErrorCount": 0,
  "filePath": StringContaining "tests/fixtures/pass.jsx",
  "fixableErrorCount": 0,
  "fixableWarningCount": 0,
  "messages": Array [],
  "usedDeprecatedRules": Array [],
  "warningCount": 0,
}
`;
